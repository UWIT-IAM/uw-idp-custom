<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

    default-init-method="initialize"
    default-destroy-method="destroy">

    <!-- Include requested principals in the audit -->
    <bean id="shibboleth.PostAssertionAuditExtractors" parent="shibboleth.DefaultPostAssertionAuditExtractors">
        <property name="sourceMap">
            <map merge="true">
                <entry key="UWRPS" value-ref="LookupRequestedPrincipalBean" />
            </map>
        </property>
    </bean>

    <bean id="LookupRequestedPrincipalBean" parent="shibboleth.ContextFunctions.Scripted" factory-method="inlineScript">
        <constructor-arg>
            <value>
            <![CDATA[
              var getinfo = function() {
                 var result = "";
                 var authCtx = input.getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
                 if (authCtx!=null) {
                    var rpCtx = authCtx.getSubcontext("net.shibboleth.idp.authn.context.RequestedPrincipalContext");
                    if (rpCtx!=null) {
                       var rps = rpCtx.getRequestedPrincipals();
                       for each (var rp in rps) {
                          var rpname = rp.getName();
                          if (result.length()>0) result = result + ",";
                          result = result + rpname;
                       }
                    }
                 }
                 return result;
              }
              getinfo();
            ]]>
            </value>
        </constructor-arg>
    </bean>

    <!--
    This bean defines a mapping between audit log categories and formatting strings. The default entry is
    for compatibility with V2 audit logging.
    -->

<!--
    <util:map id="shibboleth.AuditFormattingMap">
        <entry key="Shibboleth-Audit" value="%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i|%X" />
    </util:map>
 -->
    <!-- local and exported audits -->
    <util:map id="shibboleth.AuditFormattingMap">
        <entry key="Shibboleth-Audit" value="%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i|%SSO|%ST|%UWRPS [%UA][%a]" />
        <entry key="Shibboleth-Audit-2" value="%e|%a|%u|%SP|%i|%attr|%pasv|%fauth|%ac|%UA" />
    </util:map>

    <!-- Allows auditing to be disabled selectively for particular profiles/flows. -->
    <util:list id="shibboleth.AuditSuppressedProfiles">
        <value>http://shibboleth.net/ns/profiles/status</value>
    </util:list>

    <!-- Override the format of date/time fields in the log and/or convert to default time zone. -->
    <bean id="shibboleth.AuditDateTimeFormat" class="java.lang.String" c:_0="YYYY-MM-dd'T'HH:mm:ss.SSS" />
    <util:constant id="shibboleth.AuditDefaultTimeZone" static-field="java.lang.Boolean.TRUE" />

    <!-- Allows auditing to be disabled selectively for particular profiles/flows. -->
    <util:list id="shibboleth.AuditSuppressedProfiles">
        <value>http://shibboleth.net/ns/profiles/status</value>
        <value>http://shibboleth.net/ns/profiles/mdquery</value>
    </util:list>

</beans>


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <!-- ========================= SAML NameID who gets what ========================= -->
    <!-- AUTOGENERATED! -->

    <!-- gets bogus nameid -->
    <bean id="uw.GetsLameAssMarketoNameId" parent="shibboleth.Conditions.RelyingPartyId">
     <constructor-arg name="candidates">
        <list>
            <value>https://urizen.s.uw.edu/shibboleth</value>
            <value>https://marketo.gifts.washington.edu</value>
        </list>
     </constructor-arg>
    </bean>

    <!-- gets eppn nameid -->
    <bean id="uw.GetsEppnNameId" parent="shibboleth.Conditions.RelyingPartyId">
     <constructor-arg name="candidates">
        <list>
            {% for rp in info.eppn %}
            <value>{{ rp }}</value>
            {% endfor %}
        </list>
     </constructor-arg>
    </bean>
    
    <!-- gets netid nameid (netid) -->
    <bean id="uw.GetsNetidNameId" parent="shibboleth.Conditions.RelyingPartyId">
     <constructor-arg name="candidates">
        <list>
            {% for rp in info.netid %}
            <value>{{ rp }}</value>
            {% endfor %}
        </list>
     </constructor-arg>
    </bean>
    
    <!-- gets tgtid nameid -->
    <bean id="uw.GetsTgtidNameId" parent="shibboleth.Conditions.RelyingPartyId">
     <constructor-arg name="candidates">
        <list>
            {% for rp in info.tgtid %}
            <value>{{ rp }}</value>
            {% endfor %}
        </list>
     </constructor-arg>
    </bean>

    <!-- gets email nameid (netid@uw.edu) -->
    <bean id="uw.GetsEmailNameId" parent="shibboleth.Conditions.RelyingPartyId">
     <constructor-arg name="candidates">
        <list>
            {% for rp in info.email %}
            <value>{{ rp }}</value>
            {% endfor %}
        </list>
     </constructor-arg>
    </bean>
</beans>

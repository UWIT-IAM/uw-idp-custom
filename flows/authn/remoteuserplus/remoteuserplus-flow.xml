<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="authn.abstract">

    <!-- This is a login flow for external authentication handled by pubcookie. -->
    
    <action-state id="SetRPUIInformation">
        <evaluate expression="SetRPUIInformation" />
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="RemoteUserActionChooser" />
    </action-state>
    
    <decision-state id="RemoteUserActionChooser">
        <if test="!opensamlProfileRequestContext.isBrowserProfile()"
           then="ReselectFlow"/>
        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext)).relyingPartyId.startsWith(&quot;http://www.workday.com&quot;)"
           then="ExternalTransferAuto"/>
        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isForceAuthn()"
           then="ExternalTransferForce"/>
        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive()"
           then="ExternalTransferPassive"
           else="ExternalTransfer"/>
    </decision-state>

    <view-state id="ExternalTransfer" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.RemoteUserPlus.externalAuthnPath')}?conversation=#{flowExecutionContext.getKey().toString()}">
        <on-render>
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(net.shibboleth.idp.authn.context.ExternalAuthenticationContext), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
        </on-render>
        <transition to="ValidateExternalAuthentication" />
    </view-state>
    
    <view-state id="ExternalTransferForce" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.RemoteUserPlus.externalAuthnPathForce')}?conversation=#{flowExecutionContext.getKey().toString()}">
        <on-render>
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(net.shibboleth.idp.authn.context.ExternalAuthenticationContext), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
        </on-render>
        <transition to="ValidateExternalAuthentication" />
    </view-state>
    
    <view-state id="ExternalTransferPassive" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.RemoteUserPlus.externalAuthnPathPassive')}?conversation=#{flowExecutionContext.getKey().toString()}">
        <on-render>
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(net.shibboleth.idp.authn.context.ExternalAuthenticationContext), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
        </on-render>
        <transition to="ValidateExternalAuthentication" />
    </view-state>
    
    <view-state id="ExternalTransferAuto" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.RemoteUserPlus.externalAuthnPathAuto')}?conversation=#{flowExecutionContext.getKey().toString()}">
        <on-render>
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(net.shibboleth.idp.authn.context.ExternalAuthenticationContext), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
        </on-render>
        <transition to="ValidateExternalAuthentication" />
    </view-state>
    
    <action-state id="ValidateExternalAuthentication">
        <evaluate expression="ValidateExternalAuthentication" />
        <evaluate expression="'proceed'" />

        <transition on="proceed" to="proceed" />
    </action-state>

    <bean-import resource="remoteuserplus-beans.xml" />

</flow>
